name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        ruby-version: ['3.0', '3.1', '3.2']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby ${{ matrix.ruby-version }}
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true
    
    - name: Install dependencies
      run: bundle install
    
    - name: Run RuboCop
      run: bundle exec rubocop
    
    - name: Run tests
      run: bundle exec rspec --format documentation
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.ruby-version == '3.2'
      with:
        file: ./coverage/.resultset.json
        flags: unittests
        name: codecov-umbrella

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true
    
    - name: Install dependencies
      run: bundle install
    
    - name: Run security audit
      run: bundle exec bundle-audit check --update
    
    - name: Run Brakeman security scan
      run: |
        gem install brakeman
        brakeman --format json --output brakeman-report.json || true
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: brakeman-report.json

  documentation:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true
    
    - name: Install dependencies
      run: bundle install
    
    - name: Generate documentation
      run: bundle exec yard doc
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./doc